version: "3.5"
services:
  app:
    build:
      dockerfile: Dockerfile.k8s
      context: .
    volumes:
      - ./:/project:cached
    working_dir: /project
    links:
      - postgres
      - redis
    depends_on:
      - postgres
      - redis
    networks:
      - frontend
      - backend
    environment:
      HTTP_X_FORWARDED_PROTO: http
      APP_KEY: base64:LOZ9YaXmkG4tMFuOZP3mYZHqYnAPPf9jYBclKPmXWVs=
      APP_NAME: marketing-tool
      APP_ENV: local
      DB_CONNECTION: pgsql
      DB_HOST: postgres
      DB_DATABASE: postgres
      DB_USERNAME: postgres
      DB_PASSWORD: rootpswd
      REDIS_HOST: redis
      BROADCAST_DRIVER: redis
      CACHE_DRIVER: redis
      SESSION_DRIVER: redis
      QUEUE_CONNECTION: sync
      MAIL_MAILER: log
      MAIL_LOG_CHANNEL: errorlog
      LOG_CHANNEL: errorlog
      LOG_LEVEL: debug
  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./:/project:ro
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
    working_dir: /project
    links:
      - app
    depends_on:
      - app
    networks:
      - frontend
  redis:
    image: redis:7
    ports:
      - "6379:6379"
    command: [sh, -c, 'rm -f /data/dump.rdb && redis-server --save "" --appendonly no']  # disable persistence
    stop_signal: SIGKILL
    networks:
      - backend
  postgres:
    image: postgres:14-bullseye
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: rootpswd
    volumes:
      - ./:/project:ro
      - postgres-data:/var/lib/postgres/data
      - ./dev/initdb-postgres:/docker-entrypoint-initdb.d
    working_dir: /project
    networks:
      - backend
networks:
  frontend:
  backend:
volumes:
  mysql-data:
  postgres-data:
